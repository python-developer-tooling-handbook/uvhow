name: Test UV Installation Detection

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-standalone:
    runs-on: ubuntu-latest
    name: Test Standalone Installer
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv via standalone installer
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
    - name: Add uv to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Test uvhow detection
      run: |
        python3 -m venv test_env
        source test_env/bin/activate
        pip install -e .
        python3 -m uvhow
        # Verify it detects standalone installer
        python3 -m uvhow | grep -q "Standalone installer" || (echo "❌ Failed to detect standalone installer" && exit 1)
        echo "✅ Correctly detected standalone installer"

  test-pip-user:
    runs-on: ubuntu-latest
    name: Test pip --user Installation
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv via pip --user
      run: python3 -m pip install --user uv
      
    - name: Add user bin to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Test uvhow detection
      run: |
        # Install uvhow in user space where uv is installed
        python3 -m pip install --user -e .
        python3 -m uvhow
        # Verify it detects pip user installation
        python3 -m uvhow | grep -q "pip (user)" || (echo "❌ Failed to detect pip user installation" && exit 1)
        echo "✅ Correctly detected pip user installation"

  test-pip-venv:
    runs-on: ubuntu-latest
    name: Test pip in Virtual Environment
    steps:
    - uses: actions/checkout@v4
    
    - name: Create virtual environment and install uv
      run: |
        python3 -m venv .venv
        source .venv/bin/activate
        pip install uv
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo ".venv/bin" >> $GITHUB_PATH
    
    - name: Test uvhow detection in venv
      run: |
        source .venv/bin/activate
        pip install -e .
        python3 -m uvhow
        # Verify it detects virtual environment installation
        python3 -m uvhow | grep -q "pip (virtual environment)" || (echo "❌ Failed to detect venv installation" && exit 1)
        echo "✅ Correctly detected venv installation"

  test-pipx:
    runs-on: ubuntu-latest
    name: Test pipx Installation
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pipx and uv
      run: |
        python3 -m pip install --user pipx
        python3 -m pipx ensurepath
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        pipx install uv
    
    - name: Test uvhow detection
      run: |
        python3 -m venv test_env
        source test_env/bin/activate
        pip install -e .
        python3 -m uvhow
        # Verify it detects pipx installation
        python3 -m uvhow | grep -q "pipx" || (echo "❌ Failed to detect pipx installation" && exit 1)
        echo "✅ Correctly detected pipx installation"

  test-homebrew:
    runs-on: macos-latest
    name: Test Homebrew Installation
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv via Homebrew
      run: brew install uv
    
    - name: Test uvhow detection
      run: |
        python3 -m venv test_env
        source test_env/bin/activate
        pip install -e .
        python3 -m uvhow
        # Verify it detects Homebrew installation
        python3 -m uvhow | grep -q "Homebrew" || (echo "❌ Failed to detect Homebrew installation" && exit 1)
        echo "✅ Correctly detected Homebrew installation"

  test-cargo:
    runs-on: ubuntu-latest
    name: Test Cargo Installation
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust and Cargo
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install uv via Cargo
      run: |
        cargo install --git https://github.com/astral-sh/uv uv
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Test uvhow detection
      run: |
        python3 -m venv test_env
        source test_env/bin/activate
        pip install -e .
        python3 -m uvhow
        # Verify it detects Cargo installation
        python3 -m uvhow | grep -q "Cargo" || (echo "❌ Failed to detect Cargo installation" && exit 1)
        echo "✅ Correctly detected Cargo installation"

  test-system-pip:
    runs-on: ubuntu-latest
    name: Test System pip Installation
    container: ubuntu:22.04
    steps:
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y python3 python3-pip python3-venv git curl
    
    - uses: actions/checkout@v4
    
    - name: Install uv via system pip
      run: |
        pip3 install uv
        # Move uv to system location to simulate system installation
        cp /usr/local/bin/uv /usr/bin/uv || cp ~/.local/bin/uv /usr/local/bin/uv
    
    - name: Test uvhow detection
      run: |
        # Install uvhow in the same environment where uv is installed
        pip3 install -e .
        python3 -m uvhow
        # Verify it detects system pip installation
        python3 -m uvhow | grep -q "pip (system)" || python3 -m uvhow | grep -q "Unknown"
        echo "✅ System pip test completed"

  test-detection-accuracy:
    runs-on: ubuntu-latest
    name: Test Detection Logic
    steps:
    - uses: actions/checkout@v4
    
    - name: Install test dependencies and run tests
      run: |
        python3 -m venv test_env
        source test_env/bin/activate
        pip install -e .
        python3 test_detection.py